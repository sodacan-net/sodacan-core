package net.sodacan.rules;
import net.sodacan.rules.Event;
import net.sodacan.rules.Connect;
global net.sodacan.rules.Container container;

declare MultiState
 	name : String @position(0);	
	count: int @position(1);
	state: int @position(2);
end

rule "initialize multistate"
  then
  	insert(new MultiState("ms1",3,0));
  	insert( new Connect("f", "ms1"));
  	insert( new Connect("g", "ms1"));
end

rule "Multistate event"
//no-loop true
  when
  	$c: Connect($en:fromDev, $tn:toDev)
  	$e: Event(name==$en) from entry-point Events
  	$t: MultiState(name==$tn,$count:count,$state:state)
  then
//  	container.log( "MultiState event" );
	delete($e);	// Consume event
	if ($state>=$count) {
	    modify($t) {setState(0)};
	} else {
	    modify($t) {setState($state+1)};
	}
end

// Send a message to device
rule "Show Multistate state"
  when
  	$e: MultiState($n: name, $s: state)
  then
  	container.log( "MultiState: " + $n + ", state: " +$s );
end
