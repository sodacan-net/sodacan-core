package net.sodacan.rules;
import net.sodacan.rules.Event;
import net.sodacan.rules.State;
import net.sodacan.rules.Sender;
global org.apache.logging.log4j.Logger logger;

rule "initialize pump"
  then
  	insert(new State("tank2", 1.0));		// Assume it's full until we get a real level event
  	insert(new TankLevel("tank2Level","tank2","wellpump", 0.7, 0.9));
  	insert(new State("wellpump", "off"));
end

rule "Process tank level event"
  when
		TankLevel($en: event,$sn: state=="tank2")
		Event(name==$en,$level:level)
		$s: State(name==$sn)
  then
	logger.debug($sn + " level: " + $level );
  	$s.setLevel($level);
  	update($s);
end

rule "Turn pump on"
  when
  	TankLevel($sn: state, $pn: pump, $on: onAt)
  	$p: State(name==$pn, value=="off")
  	$s: State(name==$sn, level<$on)
  then
  	$p.setValue("on");
  	update($p);
end

rule "Turn pump off"
  when
  	TankLevel($sn: state, $pn: pump, $off: offAt)
  	$p: State(name==$pn, value=="on")
  	$s: State(name==$sn, level>=$off)
  then
  	$p.setValue("off");
  	update($p);
end